---
// üìÅ src/pages/auth/login.astro
import Layout from '@/layouts/Layout.astro';
import { validateSession } from '@/lib/auth-utils';
// Redirigir si ya est√° autenticado
const { user } = await validateSession(Astro.cookies);
if (user) {
  const redirectTo = user.role === 'admin' ? '/admin/dashboard' : '/cashier/dashboard';
  return Astro.redirect(redirectTo);
}

const returnTo = Astro.url.searchParams.get('returnTo') || '/dashboard';
---

<Layout title="Login - POS System">
  <div class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <div>
        <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
          Sign in to POS System
        </h2>
        <p class="mt-2 text-center text-sm text-gray-600">
          Enter your credentials to access the system
        </p>
      </div>
      
      <form class="mt-8 space-y-6" id="loginForm">
        <input type="hidden" name="returnTo" value={returnTo} />
        
        <div class="rounded-md shadow-sm -space-y-px">
          <div>
            <label for="username" class="sr-only">Username</label>
            <input
              id="username"
              name="username"
              type="text"
              autocomplete="username"
              required
              class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
              placeholder="Username"
            />
          </div>
          <div>
            <label for="password" class="sr-only">Password</label>
            <input
              id="password"
              name="password"
              type="password"
              autocomplete="current-password"
              required
              class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
              placeholder="Password"
            />
          </div>
        </div>

        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <input
              id="remember-me"
              name="remember-me"
              type="checkbox"
              class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded"
            />
            <label for="remember-me" class="ml-2 block text-sm text-gray-900">
              Remember me
            </label>
          </div>
        </div>

        <div>
          <button
            type="submit"
            class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed"
            id="submitButton"
          >
            <span class="absolute left-0 inset-y-0 flex items-center pl-3">
              <svg class="h-5 w-5 text-indigo-500 group-hover:text-indigo-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v7a2 2 0 01-2 2H5a2 2 0 01-2-2v-7a2 2 0 012-2z" clip-rule="evenodd" />
              </svg>
            </span>
            Sign in
          </button>
        </div>

        <div id="errorMessage" class="hidden mt-3 text-center text-sm text-red-600"></div>
        <div id="successMessage" class="hidden mt-3 text-center text-sm text-green-600"></div>
      </form>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('loginForm') as HTMLFormElement;
      const submitButton = document.getElementById('submitButton') as HTMLButtonElement;
      const errorMessage = document.getElementById('errorMessage') as HTMLDivElement;
      const successMessage = document.getElementById('successMessage') as HTMLDivElement;

      function showError(message: string) {
        errorMessage.textContent = message;
        errorMessage.classList.remove('hidden');
        successMessage.classList.add('hidden');
      }

      function showSuccess(message: string) {
        successMessage.textContent = message;
        successMessage.classList.remove('hidden');
        errorMessage.classList.add('hidden');
      }

      function hideMessages() {
        errorMessage.classList.add('hidden');
        successMessage.classList.add('hidden');
      }

      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        hideMessages();

        const formData = new FormData(form);
        const username = formData.get('username') as string;
        const password = formData.get('password') as string;
        const rememberMe = formData.get('remember-me') === 'on';

        if (!username || !password) {
          showError('Please fill in all fields');
          return;
        }

        submitButton.disabled = true;
        submitButton.textContent = 'Signing in...';

        try {
          const response = await fetch('/api/auth/login', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              username,
              password,
              rememberMe,
            }),
          });

          const data = await response.json();

          if (data.success) {
            showSuccess('Login successful! Redirecting...');
            setTimeout(() => {
              window.location.href = data.redirectTo || '/dashboard';
            }, 1000);
          } else {
            showError(data.message || 'Login failed');
          }
        } catch (error) {
          console.error('Login error:', error);
          showError('Network error. Please try again.');
        } finally {
          submitButton.disabled = false;
          submitButton.textContent = 'Sign in';
        }
      });
    });
  </script>
</Layout>